@startuml
 package Scala <<profile>> {
    class Class <<metaclass>> 
    abstract class ScalaClass <<stereotype>> 

    abstract class AccessModifierElement {
        isObjectPrivate : boolean 
        isClassPrivate : boolean  
        isQualifiedPrivate : boolean 
        privateAccessQualid : String 
        isObjectProtected : boolean
        isQualifiedProtected : boolean
        protectedAccessQualid : String
    }

    abstract class ModifierElement {
        isFinal : boolean 
        isImplicit : boolean 
        isInline : boolean 
        isLazy : boolean 
        isOpaque : boolean 
        isOpen : boolean 
        isOverride : boolean 
        isSealed : boolean 
    }


    class Object <<stereotype>>
    class CaseObject <<stereotype>> 
    class Case <<stereotype>> 
    class Type <<stereotype>> 
    class Plist <<stereotype>>
    class Pathdep <<stereotype>>
    class Annotated <<stereotype>>  {
        annotations:String [1..*]
    }

    Class <-- ScalaClass : {required}
    AccessModifierElement <|-- ScalaClass
    ModifierElement <|-- ScalaClass
    
    ScalaClass <|-- Object
    ScalaClass <|-- CaseObject
    ScalaClass <|-- Case 
    ScalaClass <|-- Type
    Class <|-- Plist
    Class <|-right- Annotated
    Class <|-- Pathdep
 }

hide circle 
hide <<metaclass>> members
hide methods
hide members
show ModifierElement members
show AccessModifierElement members
hide ModifierElement methods 
hide AccessModifierElement methods
show Annotated attributes 

skinparam defaultFontName Source Code Pro

skinparam groupinheritance 4

skinparam ClassStereotypeFontColor #1b1f23

skinparam class {
    BackgroundColor White
    BorderColor #1b1f23
    ArrowColor #1b1f23
    FontColor #6f42c1
}

skinparam note {
    BackgroundColor White
    BorderColor #1b1f23
    ArrowColor #1b1f23
    FontColor #d73a49
}


skinparam stereotype {
    FontColor #d73a49
}
@enduml 