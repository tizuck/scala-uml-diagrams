@startuml

package "<<profile>> Scala" #00 {
    class Class <<metaclass>>
    class ScalaClass <<stereotype>>
    class Caseclass <<stereotype>>
     class Trait <<stereotype>> {
        isTransparent : Boolean   
    }

    abstract class AccessModifierElement {
        isObjectPrivate : boolean 
        isClassPrivate : boolean  
        isQualifiedPrivate : boolean 
        privateAccessQualid : String 
        isObjectProtected : boolean
        isQualifiedProtected : boolean
        protectedAccessQualid : String
    }

    abstract class ModifierElement {
        isFinal : boolean 
        isImplicit : boolean 
        isInline : boolean 
        isLazy : boolean 
        isOpaque : boolean 
        isOpen : boolean 
        isOverride : boolean 
        isSealed : boolean 
    }

    Class <-- ScalaClass :  "\n\n{required}" 
    ModifierElement <|--left- ScalaClass 
    AccessModifierElement <|--right- ScalaClass 
    ScalaClass <|-- Trait
    ScalaClass <|-- Caseclass 


}

hide class circle
hide class methods 
hide <<metaclass>> members 
hide ScalaClass members 
hide abstract methods
hide Caseclass members 

skinparam defaultFontName Source Code Pro

skinparam ClassStereotypeFontColor #1b1f23

skinparam class {
    BackgroundColor White
    BorderColor #1b1f23
    ArrowColor #1b1f23
    FontColor #6f42c1
}

skinparam note {
    BackgroundColor White
    BorderColor #1b1f23
    ArrowColor #1b1f23
    FontColor #d73a49
}


skinparam stereotype {
    FontColor #d73a49
}

hide circle

@enduml 